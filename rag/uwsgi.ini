[uwsgi]
chdir = /rag
module = app:app
master = true
processes = 4
socket = /tmp/rag.sock
chmod-socket = 666
vacuum = true
die-on-term = true
protocol = fastcgi
lazy-apps = true
enable-threads = true
thunder-lock = true

# 큰 요청 본문 처리를 위한 설정 (기존 buffer-size 개선)
buffer-size = 65536             ; 내부 버퍼 크기 (64KB)
post-buffering = 65536          ; POST 데이터 버퍼링 크기 증가 (64KB)
post-buffering-bufsize = 131072 ; POST 버퍼 크기 (128KB)
max-request-size = 134217728    ; 최대 요청 크기 (128MB)
body-read-warning = 1048576     ; 1MB 이상 요청 시 경고 로그
limit-post = 134217728          ; POST 데이터 최대 크기 (128MB)

# 타임아웃 설정
harakiri = 300
socket-timeout = 300
http-timeout = 300

# 스레드 기반 비동기 처리 (gevent 없이)
threads = 8                     ; 스레드 수 증가 (기존 4 -> 8)
thread-stacksize = 8192         ; 스레드 스택 크기 증가 (기존 4096 -> 8192)
offload-threads = 4             ; 오프로드 스레드 추가

# 메모리 관리
max-requests = 1000
reload-on-rss = 800
reload-on-as = 1024
reload-mercy = 60
memory-report = true
single-interpreter = true
py-call-osafterfork = true
listen = 1024
cheap = true
cheaper = 2
cheaper-algo = spare
cheaper-step = 1

# 로깅 설정
log-5xx = true 
log-4xx = true
log-date = true
log-slow = true
log-x-forwarded-for = true
logto = /var/log/rag/uwsgi.log
log-master = true
log-reopen = true

# 안정성 옵션
max-worker-lifetime = 3600
reload-on-exception = true
disable-logging = false
need-app = true
strict = true
reload-mercy = 120

# TCP 성능 (호환성 있는 옵션만 사용)
so-keepalive = true
so-send-timeout = 60

# 청크 입력 처리 개선
chunked-input-timeout = 300
chunked-input-limit = 65536

# 요청 처리 최적화
ignore-sigpipe = true           ; SIGPIPE 무시
ignore-write-errors = true      ; 쓰기 오류 무시
disable-write-exception = true  ; 쓰기 예외 비활성화
